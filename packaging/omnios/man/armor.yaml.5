.Dd $Mdocdate$
.Dt ARMOR.YAML 5
.Os
.Sh NAME
.Nm armor.yaml
.Nd configuration file for Armor
.Sh DESCRIPTION
The
.Nm
file is the main configuration file for the Armor.
It is written in YAML format and controls all aspects of the service
operation including network settings, user authentication, organization
management, email configuration, and Armor API integration.
.Pp
The configuration file is typically located at:
.Pa /etc/armor/config.yaml
.Sh CONFIGURATION SECTIONS
The configuration file is organized into logical sections that control
different aspects of the frontend service operation.
.Ss app
Basic application identification and settings.
.Bl -tag -width "frontend_url"
.It Cm name
String specifying the application name (default: "Armor")
.It Cm version
String specifying the application version (e.g., "0.0.15")
.It Cm frontend_url
Base URL where the frontend is accessible (e.g., "https://localhost:3443")
.El
.Ss server
HTTP and HTTPS server configuration.
.Bl -tag -width "hostname"
.It Cm hostname
Hostname or IP address to bind the server to (default: "localhost")
.It Cm port
TCP port number for the web server (default: 3443)
.El
.Ss ssl
SSL/TLS certificate and encryption settings.
.Bl -tag -width "generate_ssl"
.It Cm enabled
Boolean enabling HTTPS server (default: true)
.It Cm generate_ssl
Boolean enabling automatic self-signed certificate generation (default: true)
.It Cm key
Filesystem path to SSL private key file
.It Cm cert
Filesystem path to SSL certificate file
.El
.Pp
When
.Cm generate_ssl
is enabled, the service will automatically create self-signed certificates
if they do not exist at the specified paths.
.Ss mail
Email configuration for user invitations and notifications.
.Bl -tag -width "smtp_connect"
.It Cm smtp_connect
SMTP server connection settings:
.Bl -tag -width "secure" -offset indent
.It Cm host
SMTP server hostname (e.g., "smtp.example.com")
.It Cm port
SMTP server port (default: 587 for STARTTLS)
.It Cm secure
Boolean for direct SSL connection (false for STARTTLS)
.El
.It Cm smtp_auth
SMTP authentication credentials:
.Bl -tag -width "password" -offset indent
.It Cm user
SMTP username or email address
.It Cm password
SMTP password or application-specific password
.El
.It Cm smtp_settings
Email message settings:
.Bl -tag -width "from" -offset indent
.It Cm from
From address for outgoing emails (e.g., "Armor <noreply@example.com>")
.El
.El
.Ss security
User authentication and security configuration.
.Bl -tag -width "allow_new_organizations"
.It Cm jwt_secret
Secret key for JWT token signing (must be kept secure)
.It Cm bcrypt_rounds
Password hashing strength for bcrypt (default: 10)
.It Cm sessionTimeout
JWT token expiration time in hours (default: 24)
.It Cm allow_new_organizations
Boolean enabling new organization creation (default: true, disable after setup)
.El
.Ss database
Database configuration and storage settings.
.Bl -tag -width "path"
.It Cm path
Filesystem path to SQLite database file (e.g., "/var/lib/armor/database/armor.db")
.El
.Ss frontend
Frontend-specific display and behavior settings.
.Bl -tag -width "enableNotifications"
.It Cm port
Frontend serving port (usually same as server.port)
.It Cm autoRefreshInterval
Dashboard auto-refresh interval in seconds (default: 5)
.It Cm enableNotifications
Boolean enabling browser notifications (default: true)
.It Cm enableDarkMode
Boolean enabling dark mode support (default: true)
.El
.Ss cors
Cross-Origin Resource Sharing (CORS) configuration for web security.
.Bl -tag -width "whitelist"
.It Cm whitelist
Array of allowed origin URLs for CORS requests. Only origins listed here
can access the API from web browsers.
.It Cm options
CORS behavior options:
.Bl -tag -width "preflightContinue" -offset indent
.It Cm origin
Boolean or specific origin validation (default: true)
.It Cm preflightContinue
Boolean to pass preflight response to next handler (default: true)
.It Cm credentials
Boolean to enable credential sharing (default: true)
.El
.El
.Ss backend_servers
Default Armor configurations (optional).
This is an array of server objects that can be pre-configured:
.Bl -tag -width "protocol" -offset indent
.It Cm hostname
Armor hostname or IP
.It Cm port
Backend server port (usually 5000 or 5001)
.It Cm protocol
Connection protocol ("http" or "https")
.It Cm entityName
Display name for the backend server
.El
.Ss environment
Environment and proxy settings.
.Bl -tag -width "trust_proxy"
.It Cm trust_proxy
Number of proxy levels to trust for client IP detection (default: 1)
.El
.Ss logging
Logging configuration and verbosity control.
.Bl -tag -width "enabled"
.It Cm level
Logging level ("error", "warn", "info", "debug") (default: "info")
.It Cm enabled
Boolean enabling application logging (default: true)
.El
.Ss limits
System resource limits and constraints.
.Bl -tag -width "maxServersPerUser"
.It Cm maxServersPerUser
Maximum number of Armors per user or organization (default: 10)
.El
.Ss gravatar
Gravatar service integration for user avatars.
.Bl -tag -width "apiKey"
.It Cm apiKey
Gravatar API key for enhanced avatar features (optional)
.El
.Sh FILES
.Bl -tag -width ".Pa /var/lib/armor/"
.It Pa /etc/armor/config.yaml
Default configuration file location
.It Pa /etc/armor/ssl/
SSL certificate directory
.It Pa /var/lib/armor/database/
Database storage directory
.It Pa /var/log/armor/
Log file directory
.El
.Sh EXAMPLES
Minimal configuration for testing:
.Bd -literal -offset indent
app:
  name: Armor
  version: 0.0.15
.\" x-release-please-version
  frontend_url: https://localhost:3443

server:
  hostname: localhost
  port: 3443

ssl:
  enabled: true
  generate_ssl: true

security:
  jwt_secret: "change-this-to-a-secure-random-string"
  allow_new_organizations: true

database:
  path: /var/lib/armor/database/armor.db
.Ed
.Pp
Production configuration with email and security hardening:
.Bd -literal -offset indent
app:
  name: Armor
  version: 0.0.15
.\" x-release-please-version
  frontend_url: https://armor.example.com

server:
  hostname: 0.0.0.0
  port: 3443

ssl:
  enabled: true
  generate_ssl: false
  key: /etc/ssl/private/armor.key
  cert: /etc/ssl/certs/armor.crt

mail:
  smtp_connect:
    host: smtp.example.com
    port: 587
    secure: false
  smtp_auth:
    user: "noreply@example.com"
    password: "smtp-app-password"
  smtp_settings:
    from: "Armor <noreply@example.com>"

security:
  jwt_secret: "very-long-secure-random-string-here"
  bcrypt_rounds: 12
  sessionTimeout: 8
  allow_new_organizations: false

cors:
  whitelist:
    - https://armor.example.com
  options:
    credentials: true

limits:
  maxServersPerUser: 5

logging:
  level: warn
  enabled: true
.Ed
.Sh DIAGNOSTICS
Configuration file syntax errors will prevent the service from starting.
Check the SMF service logs for detailed error information:
.Pp
.Dl # svcs -L armor
.Pp
Common configuration issues:
.Bl -bullet -offset indent
.It
Invalid YAML syntax (indentation, special characters)
.It
Non-existent file paths for SSL certificates or database storage
.It
Port conflicts with other services
.It
Insufficient filesystem permissions for specified directories
.It
Invalid CORS origin URLs
.It
Weak or missing JWT secret configuration
.It
SMTP configuration errors preventing email invitations
.El
.Sh SEE ALSO
.Xr armor 8 ,
.Xr yaml 7 ,
.Xr svcadm 8 ,
.Xr svcs 1 ,
.Xr armor-api 8
.Sh STANDARDS
The configuration file uses YAML 1.2 format as defined by the YAML specification.
SSL/TLS settings follow standard OpenSSL certificate formats.
Email configuration follows standard SMTP protocols.
.Sh SECURITY CONSIDERATIONS
The configuration file contains sensitive information:
.Bl -bullet -offset indent
.It
JWT secret key for token signing
.It
SMTP credentials for email services
.It
SSL certificate and key file paths
.It
Database storage locations
.It
CORS origin whitelist defining trusted frontend URLs
.El
.Pp
Recommended security practices:
.Bl -bullet -offset indent
.It
Set restrictive filesystem permissions (mode 0600) on configuration files
.It
Use strong, randomly generated JWT secrets (32+ characters)
.It
Use strong SSL certificates from a trusted Certificate Authority in production
.It
Configure CORS whitelist to include only necessary origins
.It
Disable new organization creation after initial setup
.It
Use appropriate bcrypt rounds (10 or higher) for password hashing
.It
Configure SMTP with application-specific passwords where possible
.It
Regularly rotate JWT secrets and update user sessions
.It
Monitor user access patterns and failed authentication attempts
.El
