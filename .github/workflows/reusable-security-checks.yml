name: Security Checks

on:
  workflow_call:
    inputs:
      fail-on-error:
        description: 'Whether to fail the workflow if security checks fail'
        required: false
        type: boolean
        default: false
    outputs:
      backend-security-result:
        description: 'Backend security check result'
        value: ${{ jobs.backend-security.outputs.result }}
      frontend-security-result:
        description: 'Frontend security check result'
        value: ${{ jobs.frontend-security.outputs.result }}

jobs:
  backend-security:
    name: Backend Security Checks
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.security-result.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm run cinstall:backend

      - name: Security audit
        id: audit
        run: |
          echo "Running security audit..."
          npm run security:audit || echo "AUDIT_FAILED=true" >> $GITHUB_ENV
        continue-on-error: true

      - name: Vulnerability scan
        id: vulnerabilities
        run: |
          echo "Running vulnerability scan..."
          npm run security:vulnerabilities || echo "VULN_FAILED=true" >> $GITHUB_ENV
        continue-on-error: true

      - name: License compliance check
        id: licenses
        run: |
          echo "Running license compliance check..."
          npm run security:licenses || echo "LICENSE_FAILED=true" >> $GITHUB_ENV
        continue-on-error: true

      - name: Supply chain security
        id: supply-chain
        run: |
          echo "Running supply chain security check..."
          npm run security:supply-chain || echo "SUPPLY_FAILED=true" >> $GITHUB_ENV
        continue-on-error: true

      - name: Set security result
        id: security-result
        run: |
          FAILED_CHECKS=""
          if [ "$AUDIT_FAILED" = "true" ]; then FAILED_CHECKS="$FAILED_CHECKS audit"; fi
          if [ "$VULN_FAILED" = "true" ]; then FAILED_CHECKS="$FAILED_CHECKS vulnerabilities"; fi
          if [ "$LICENSE_FAILED" = "true" ]; then FAILED_CHECKS="$FAILED_CHECKS licenses"; fi
          if [ "$SUPPLY_FAILED" = "true" ]; then FAILED_CHECKS="$FAILED_CHECKS supply-chain"; fi
          
          if [ -n "$FAILED_CHECKS" ]; then
            echo "result=failed" >> $GITHUB_OUTPUT
            echo "Backend security checks failed:$FAILED_CHECKS"
            if [ "${{ inputs.fail-on-error }}" = "true" ]; then
              exit 1
            fi
          else
            echo "result=passed" >> $GITHUB_OUTPUT
            echo "All backend security checks passed"
          fi

  frontend-security:
    name: Frontend Security Checks
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.security-result.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm run cinstall:frontend

      - name: Frontend security checks
        id: frontend-checks
        run: |
          echo "Running frontend security checks..."
          cd web
          npm run security:all || echo "FRONTEND_SECURITY_FAILED=true" >> $GITHUB_ENV
        continue-on-error: true

      - name: Set security result
        id: security-result
        run: |
          if [ "$FRONTEND_SECURITY_FAILED" = "true" ]; then
            echo "result=failed" >> $GITHUB_OUTPUT
            echo "Frontend security checks failed"
            if [ "${{ inputs.fail-on-error }}" = "true" ]; then
              exit 1
            fi
          else
            echo "result=passed" >> $GITHUB_OUTPUT
            echo "All frontend security checks passed"
          fi
