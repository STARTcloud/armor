name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write
  security-events: write
  packages: read

jobs:
  backend-security:
    name: Backend Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm run cinstall:backend

      - name: Security audit
        run: npm run security:audit

      - name: Vulnerability scan
        run: npm run security:vulnerabilities

      - name: License compliance check
        run: npm run security:licenses

      - name: Supply chain security
        run: npm run security:supply-chain

  frontend-security:
    name: Frontend Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm run cinstall:frontend

      - name: Frontend security checks
        run: cd web && npm run security:all

  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm run cinstall:all

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm run cinstall:all

      - name: Build frontend
        run: npm run build

  verify-scripts:
    name: Verify Scripts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm run cinstall:backend

      - name: Verify scripts exist
        run: |
          echo "Checking sync-versions script..."
          npm run sync-versions --dry-run || echo "sync-versions script verification complete"
          echo "Checking generate-docs script..."
          npm run generate-docs --help || echo "generate-docs script verification complete"

  codeql-analysis:
    name: CodeQL
    needs: [backend-security, frontend-security, lint-and-format, build-frontend, verify-scripts]
    uses: ./.github/workflows/codeql.yml

  release-please:
    name: Release Please
    needs: codeql-analysis
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release

  build-production:
    name: Production
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/prod-build.yml
    with:
      version: ${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}
      tag_name: ${{ needs.release-please.outputs.tag_name }}

  build-dev-packages:
    name: Development
    needs: release-please
    if: ${{ !needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/dev-build.yml

  deploy-documentation:
    name: Generate and Publish Documentation
    needs: build-production
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Documentation Build
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docs.yml',
              ref: 'main'
            });
